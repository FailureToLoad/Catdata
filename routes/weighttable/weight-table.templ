package weighttable

import (
	"github.com/failuretoload/catdata/request"
	"github.com/failuretoload/catdata/cat/domain"
)

type WeightTableSignals struct {
	Delay int `json:"delay"`
}

templ Content() {
	<div class="hidden md:block overflow-hidden bg-white rounded-lg shadow-lg">
		@Table()
	</div>
}

templ Table() {
	<table class="min-w-full divide-y divide-gray-200">
			<thead class="bg-gray-50">
				<tr>
					<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Cat</th>
					<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
					<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Weight (kg)</th>
					<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Notes</th>
				</tr>
			</thead>
			<tbody id="weighttablebody" data-on-load={request.GetSSE("/query")} class="bg-white divide-y divide-gray-200">
			</tbody>
		</table>
}

templ Rows(records []domain.CatRecord) {
	<tbody id="weighttablebody" class="bg-white divide-y divide-gray-200">
				for _, record := range records {
					<tr>
						<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{record.Cat}</td>
						<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{record.Timestamp}</td>
						<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{record.Weight}</td>
						if record.Notes != nil {
							<td class="px-6 py-4 text-sm text-gray-500">{*record.Notes}</td>
						}	
					</tr>
				}
			</tbody>
}